import logging
from datetime import datetime
from aiogram import F, types
from aiogram.filters import Command

from ..config import bot, dp
from ..database import Database
from ..utils import is_moderator, get_user_mention, lift_restrictions, log_action

logger = logging.getLogger(__name__)

@dp.message(Command(commands=["–º—É—Ç—ã", "–≤–∞—Ä–Ω—ã", "–±–∞–Ω—ã", "–∞–º–Ω–∏—Å—Ç–∏—è", "amnesty"]))
async def list_commands(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ —Å–ø–∏—Å–∫–æ–≤ –∏ –∞–º–Ω–∏—Å—Ç–∏–∏"""
    try:
        if not await is_moderator(message.chat.id, message.from_user.id):
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
            return
        
        cmd = message.text.split()[0][1:].lower()
        handlers = {
            "–º—É—Ç—ã": cmd_mutes,
            "–≤–∞—Ä–Ω—ã": cmd_warns_list,
            "–±–∞–Ω—ã": cmd_bans_list,
            "–∞–º–Ω–∏—Å—Ç–∏—è": cmd_amnesty,
            "amnesty": cmd_amnesty
        }
        
        if cmd in handlers:
            await handlers[cmd](message)
        
        try:
            await message.delete()
        except:
            pass
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ list_commands: {e}")

async def cmd_mutes(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º—É—Ç–æ–≤"""
    try:
        db = Database()
        now = datetime.now().timestamp()
        mutes = db.get_active_mutes()
        
        if not mutes:
            await message.reply("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º—É—Ç–æ–≤.")
            return
        
        lines = []
        for mute in mutes:
            if mute["until"] > now:
                mention = await get_user_mention(mute["chat_id"], mute["user_id"])
                until_dt = datetime.fromtimestamp(mute["until"])
                until_str = until_dt.strftime("%d.%m.%Y %H:%M")
                lines.append(f"‚úÖ {mention} –¥–æ {until_str}")
        
        await message.reply("\n".join(lines))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_mutes: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")

async def cmd_warns_list(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"""
    try:
        db = Database()
        uids = db.get_all_users_with_warns()
        if not uids:
            await message.reply("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏.")
            return
        
        lines = []
        for uid in uids:
            count = db.get_warns(uid)
            if count > 0:
                mention = await get_user_mention(message.chat.id, uid)
                lines.append(f"‚ö†Ô∏è {mention}: {count}")
        
        await message.reply("\n".join(lines))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_warns_list: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")

async def cmd_bans_list(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        db = Database()
        bans = db.get_bans(message.chat.id)
        if not bans:
            await message.reply("–ù–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            return
        
        lines = []
        for uid in bans:
            mention = await get_user_mention(message.chat.id, uid)
            lines.append(f"üö´ {mention}")
        
        await message.reply("\n".join(lines))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_bans_list: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")

async def cmd_amnesty(message: types.Message):
    """–ü—Ä–æ–≤–æ–¥–∏—Ç –∞–º–Ω–∏—Å—Ç–∏—é - —Å–Ω–∏–º–∞–µ—Ç –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"""
    try:
        db = Database()
        
        for mute in db.get_active_mutes():
            await lift_restrictions(mute["chat_id"], mute["user_id"])
        
        bans = db.get_bans(message.chat.id)
        for uid in bans:
            try:
                await bot.unban_chat_member(message.chat.id, uid)
                db.remove_ban(message.chat.id, uid)
            except:
                pass
        
        db.clear_all_warns()
        
        await message.reply("‚úÖ –ê–º–Ω–∏—Å—Ç–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∞! –í—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–Ω—è—Ç—ã, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–±–Ω—É–ª–µ–Ω—ã.")
        log_action("Amnesty", message.from_user.id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_amnesty: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")